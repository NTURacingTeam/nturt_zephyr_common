/dts-v1/;
#include <mem.h>
#include <st/h5/stm32h562.dtsi>
#include <st/h5/stm32h562vgtx-pinctrl.dtsi>

/ {
    model = "NTU Racing Team rearbox based on STM32H562VGT6";
    compatible = "nturt,rearbox";

    chosen {
        zephyr,console = &usart2;
        zephyr,shell-uart = &usart2;
        zephyr,sram = &sram1;
        zephyr,flash = &flash0;
        zephyr,canbus = &fdcan1;
        zephyr,code-partition = &slot0_partition;
    };

    sram1: memory@20000000 {
        compatible = "zephyr,memory-region", "mmio-sram";
        reg = <0x20000000 DT_SIZE_K(256)>;
        zephyr,memory-region = "SRAM1";
    };

    sram2: memory@20040000 {
        compatible = "zephyr,memory-region", "mmio-sram";
        reg = <0x20040000 DT_SIZE_K(64)>;
        zephyr,memory-region = "SRAM2";
    };

    sram3: memory@20050000 {
        compatible = "zephyr,memory-region", "mmio-sram";
        reg = <0x20050000 DT_SIZE_K(320)>;
        zephyr,memory-region = "SRAM3";
    };

    soc {
        flash-controller@40022000 {
            flash0: flash@8000000 {
                reg = <0x08000000 DT_SIZE_M(1)>;
            };
        };
    };
};

&flash0 {
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        boot_partition: partition@0 {
            label = "mcuboot";
            reg = <0x00000000 DT_SIZE_K(64)>;
        };

        slot0_partition: partition@10000 {
            label = "image-0";
            reg = <0x00010000 DT_SIZE_K(448)>;
        };

        slot1_partition: partition@80000 {
            label = "image-1";
            reg = <0x00080000 DT_SIZE_K(448)>;
        };

        storage_partition: partition@f0000 {
            label = "storage";
            reg = <0x000f0000 DT_SIZE_K(64)>;
        };
    };
};

&clk_hse {
    clock-frequency = <DT_FREQ_M(24)>;
    status = "okay";
};

&clk_hsi {
    status = "okay";
};

&clk_hsi48 {
    status = "okay";
};

&clk_csi {
    status = "okay";
};

&clk_lse {
    status = "okay";
};

&clk_lsi {
    status = "okay";
};

&pll1 {
    div-m = <6>;
    mul-n = <125>;
    div-p = <2>;
    div-q = <2>;
    div-r = <2>;
    clocks = <&clk_hse>;
    status = "okay";
};

&pll2 {
    div-m = <6>;
    mul-n = <120>;
    div-p = <2>;
    div-q = <2>;
    div-r = <10>;
    clocks = <&clk_hse>;
    status = "okay";
};

&pll3 {
    div-m = <6>;
    mul-n = <60>;
    div-p = <2>;
    div-q = <5>;
    div-r = <5>;
    clocks = <&clk_hse>;
    status = "okay";
};

&rcc {
    clocks = <&pll1>;
    clock-frequency = <DT_FREQ_M(250)>;
    ahb-prescaler = <1>;
    apb1-prescaler = <1>;
    apb2-prescaler = <1>;
    apb3-prescaler = <1>;
};

&rtc {
    clocks = <&rcc STM32_CLOCK_BUS_APB3 0x00200000>,
             <&rcc STM32_SRC_LSE RTC_SEL(1)>;
    status = "okay";
};

&adc1 {
    pinctrl-0 = <&adc1_inp0_pa0 &adc1_inp1_pa1 &adc1_inp3_pa6 &adc1_inp4_pc4
                 &adc1_inp5_pb1 &adc1_inp7_pa7 &adc1_inp9_pb0>;
    pinctrl-names = "default";
    st,adc-clock-source = <SYNC>;
    st,adc-prescaler = <4>;
    #address-cells = <1>;
    #size-cells = <0>;
    status = "okay";

    channel@0 {
        reg = <0>;
        zephyr,gain = "ADC_GAIN_1";
        zephyr,reference = "ADC_REF_INTERNAL";
        zephyr,acquisition-time = <ADC_ACQ_TIME(ADC_ACQ_TIME_TICKS, 248)>;
        zephyr,resolution = <12>;
    };

    channel@1 {
        reg = <1>;
        zephyr,gain = "ADC_GAIN_1";
        zephyr,reference = "ADC_REF_INTERNAL";
        zephyr,acquisition-time = <ADC_ACQ_TIME(ADC_ACQ_TIME_TICKS, 248)>;
        zephyr,resolution = <12>;
    };

    channel@3 {
        reg = <3>;
        zephyr,gain = "ADC_GAIN_1";
        zephyr,reference = "ADC_REF_INTERNAL";
        zephyr,acquisition-time = <ADC_ACQ_TIME(ADC_ACQ_TIME_TICKS, 248)>;
        zephyr,resolution = <12>;
    };

    channel@4 {
        reg = <4>;
        zephyr,gain = "ADC_GAIN_1";
        zephyr,reference = "ADC_REF_INTERNAL";
        zephyr,acquisition-time = <ADC_ACQ_TIME(ADC_ACQ_TIME_TICKS, 248)>;
        zephyr,resolution = <12>;
    };

    channel@5 {
        reg = <5>;
        zephyr,gain = "ADC_GAIN_1";
        zephyr,reference = "ADC_REF_INTERNAL";
        zephyr,acquisition-time = <ADC_ACQ_TIME(ADC_ACQ_TIME_TICKS, 248)>;
        zephyr,resolution = <12>;
    };

    channel@7 {
        reg = <7>;
        zephyr,gain = "ADC_GAIN_1";
        zephyr,reference = "ADC_REF_INTERNAL";
        zephyr,acquisition-time = <ADC_ACQ_TIME(ADC_ACQ_TIME_TICKS, 248)>;
        zephyr,resolution = <12>;
    };

    channel@9 {
        reg = <9>;
        zephyr,gain = "ADC_GAIN_1";
        zephyr,reference = "ADC_REF_INTERNAL";
        zephyr,acquisition-time = <ADC_ACQ_TIME(ADC_ACQ_TIME_TICKS, 248)>;
        zephyr,resolution = <12>;
    };
};

&usart2 {
    pinctrl-0 = <&usart2_tx_pd5 &usart2_rx_pd6>;
    pinctrl-names = "default";
    current-speed = <115200>;
    status = "okay";
};

&uart4 {
    pinctrl-0 = <&uart4_tx_pd12 &uart4_rx_pd11 &uart4_de_pb14>;
    pinctrl-names = "default";
    current-speed = <115200>;
    de-enable;
    status = "okay";
};

&uart5 {
    pinctrl-0 = <&uart5_tx_pb13 &uart5_rx_pb12 &uart5_de_pc8>;
    pinctrl-names = "default";
    current-speed = <115200>;
    de-enable;
    status = "okay";
};

&i2c1 {
    clocks = <&rcc STM32_CLOCK_BUS_APB1 0x00200000>,
             <&rcc STM32_SRC_PLL3_R I2C1_SEL(1)>;
    pinctrl-0 = <&i2c1_scl_pb6 &i2c1_sda_pb7>;
    pinctrl-names = "default";
    status = "okay";
};

&spi4 {
    pinctrl-0 = <&spi4_sck_pe2 &spi4_miso_pe5 &spi4_mosi_pe6>;
    pinctrl-names = "default";
    cs-gpios = <&gpioe 4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
    status = "okay";
};

&fdcan1 {
    clocks = <&rcc STM32_CLOCK_BUS_APB1_2 0x00000200>,
             <&rcc STM32_SRC_HSE FDCAN_SEL(0)>;
    pinctrl-0 = <&fdcan1_tx_pb9 &fdcan1_rx_pb8>;
    pinctrl-names = "default";
    bitrate = <500000>;
    sample-point = <800>;
    bitrate-data = <500000>;
    sample-point-data = <800>;
    status = "okay";
};

&sdmmc1 {
    clocks = <&rcc STM32_CLOCK_BUS_AHB4 0x00000800>,
             <&rcc STM32_SRC_PLL2_R SDMMC1_SEL(1)>;
    pinctrl-0 = <&sdmmc1_d0_pa10 &sdmmc1_d1_pc9 &sdmmc1_d2_pc10 &sdmmc1_d3_pc11
                 &sdmmc1_ck_pc12 &sdmmc1_cmd_pd2>;
    pinctrl-names = "default";
    bus-width = <4>;
    idma;
    status = "okay";

    // stm32 sdmmc driver already registers sdmmc as disk
    // mmc {
    //     compatible = "zephyr,sdmmc-disk";
    //     disk-name = "SD";
    // };
};

zephyr_udc0: &usb {
    clocks = <&rcc STM32_CLOCK_BUS_APB2 0x01000000>,
             <&rcc STM32_SRC_PLL3_Q USB_SEL(2)>;
    pinctrl-0 = <&usb_dm_pa11 &usb_dp_pa12>;
    pinctrl-names = "default";
    status = "okay";
};
