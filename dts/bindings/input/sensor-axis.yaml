description: |
  Sesnor based axis input device.

  Implement an input device generating absolute axis events by periodically
  reading from sensors and optionally combines multiple sensors into a single
  axis event using weighted average.

  Offers deadzone and noise filters for primitive sensor data processing, as
  well as changing individual sensor input range during runtime and save the
  calibrations using settings subsystem. Range and deviation checks are also
  provided with optional time tolerance for data plausibility.

  Example configuration:

  #include <zephyr/dt-bindings/sensor/sensor-channels.h>
  #include <zephyr/dt-bindings/input/input-event-codes.h>
  #include <zephyr/dt-bindings/input/sensor-axis.h>

  sensor-axis {
      compatible = "senssor-axis";
      poll-period-ms = <10>;

      axis-x {
          zephyr,axis = <INPUT_ABS_X>;
          deadzone-mode = <INPUT_DEADZONE_MODE_EDGE>;
          deadzone-size = <5>; // 5%
          noise = <1000>; // 1%
          dev-tolerance = <10>; // 10%

          axis-x-0 {
              sensor = <&sensor0>;
              zephyr,channel = <SENSOR_CHAN_ROTATION>;
              in-min = <0 0>;
              in-max = <15 0>;
              range-tolerance = <10>; // 10%
          };

          axis-x-1 {
              sensor = <&sensor1>;
              zephyr,channel = <SENSOR_CHAN_ROTATION>;
              in-min = <15 0>;
              in-max = <0 0>;
              range-tolerance = <10>; // 10%
          };
      };
  };

compatible: "sensor-axis"

include: base.yaml

properties:
  poll-period:
    type: int
    default: 10
    description: |
      How often to get new sensor samples for the various axes in milliseconds.

child-binding:
  description: |
    Each axis this device controls.

  properties:
    zephyr,axis:
      type: int
      required: true
      description: |
        The input code that this axis will report, typically one of INPUT_ABS_*.
    out-min:
      type: int
      default: 0
      description: |
        Minimum value to output on input events.
    out-max:
      type: int
      default: 100
      description: |
        Maximum value to output on input events.
    deadzone-mode:
      type: int
      default: 0
      description: |
        The mode of deadzone. Can be either INPUT_DEADZONE_MODE_CENTER or
        INPUT_DEADZONE_MODE_EDGE. If CENTER is specified, sensor value within
        the center plus or minus the deadzone size will be reported as center.
        If EDGE is specified, sensor value within the minimum value plus the
        deadzone size will be reported as the minimum value.
      enum:
        - 0 # INPUT_DEADZONE_MODE_CENTER
        - 1 # INPUT_DEADZONE_MODE_EDGE
    deadzone-size:
      type: int
      default: 0
      description: |
        Deadzone size of the sensor in percentage. Set to 0 to disable deadzone.
        Note that if both noise and deadzone are enabled, the deadzone should be
        greater than noise.
    noise:
      type: int
      default: 0
      description: |
        Change in combined sensor value before a new input event is reported in
        one-millionth part. Set to 0 to disable noise filter.
        Note that if both noise and deadzone are enabled, the deadzone should be
        greater than noise.
    dev-tolerance:
      type: int
      default: -1
      description: |
        The tolerance of value deviation between any two sensors used in this
        axis in percentage. Set to -1 to disable deviation check.
    time-tolerance:
      type: int
      default: 0
      description: |
        Amount of time to wait in milliseconds before reporting this axis
        invalid due to out of range or deviation errors. During time tolerance
        no input will be reported. Set to 0 to disable time tolerance.
        Note that channel time tolerance does not affect sensor reporting
        errors.
    time-tolerance-decay:
      type: int
      default: 100
      description: |
        Decay rate of accumulated error time (accumulated_time -= time_tolerance 
        * decay_rate) in percentage when the axis passes all checks. It can be
        used to avoid sporadic successes mixed in the failures to be considered
        as valid. It is also used to clear the error once the accumulated error
        time has decayed to 0. Set to 100 to disable decay and immediately clear
        error once the axis passes all checks.

  child-binding:
    description: |
      Each sensor this axis combines into.
    properties:
      sensor:
        type: phandle
        required: true
        description: |
          The sensor to fetch data from.
      zephyr,channel:
        type: int
        required: true
        description: |
          The channel of the sensor to fetch data from.
      in-min:
        type: array
        required: true
        description: |
          Minimum value from the sensor that corresponds to minimum output
          value.
          The format is the same as struct sensor_value in <X Y>, where X is the
          integer part and Y is the one-millionth part.
      in-max:
        type: array
        required: true
        description: |
          Maximum value from the sensor that corresponds to maximum output
          value.
          The format is the same as struct sensor_value in <X Y>, where X is the
          integer part and Y is the one-millionth part.
      range-tolerance:
        type: int
        default: -1
        description: |
          Sensor value tolerance to go below minimum or above maximum before
          it's considered out of range in percentage. Clamp to value within
          the tolerance range. Set to -1 to disable range check.
      weight:
        type: int
        default: 1
        description: |
          The weight of this sensor channel in the final output.
